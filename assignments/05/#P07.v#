Require Export P06.

            



Lemma In_map_iff :
  forall (A B : Type) (f : A -> B) (l : list A) (y : B),
    In y (map f l) <->
    exists x, f x = y /\ In x l.
Proof.
  intros A B f.
  intros l y.
  unfold iff.
  split.
  - induction l as [ | h t Ht].
    + simpl.
      intros F. 
      inversion F.  
    + simpl.
      intros [Hl|Hr].
      * exists h.
        split.
        { apply Hl.
          }
        { left.
          reflexivity.
          }
      * apply Ht in Hr.
        inversion Hr.
        exists x.
        split.
        { apply H.
          } 
        { right.
          apply H.
          }
  - intros [x Hx].
    inversion Hx.
    induction l as [| h t Ht].
    + simpl.
      inversion H0.
    + simpl.
      simpl in H0.
      destruct H0 as [H1 | H2].
      * left.
        rewrite -> H1.
        apply H.
      * right.
        apply Ht.
        { split.
          {apply H.
            }
          { apply H2. 
            }
          }
        { apply H2.
          }
Qed.

